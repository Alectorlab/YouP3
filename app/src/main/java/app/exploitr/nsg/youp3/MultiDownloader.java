package app.exploitr.nsg.youp3;

import android.app.DownloadManager;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.database.Cursor;
import android.net.Uri;
import android.os.Environment;
import android.support.design.widget.Snackbar;
import android.view.View;
import android.webkit.MimeTypeMap;
import android.widget.Toast;


import java.io.File;

/**
 * Created by exploitr on 15-08-2017.
 * <p>
 * TODO
 */

class MultiDownloader {

    private Context mContext;
    private String title;
    private View mView;
    private Cursor cursor;
    private String fileQuality;
    private File file;
    private String fileExtension;
    private DownloadManager manager;
    private BroadcastReceiver afterDownload;
    private long downloadID, fileSize;

    MultiDownloader(String sTitle, String sFileQuality, String extension, Context context, View view) {
        this.mContext = context;
        this.title = sTitle;
        this.mView = view;
        this.fileExtension = extension;
        this.fileQuality = sFileQuality;

    }


    static String getMimeType(String url) {
        String type = null;
        String extension = MimeTypeMap.getFileExtensionFromUrl(url);
        if (extension != null) {
            type = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension);
        }
        return type;
    }

    void CheckAndGet(final String link) {

        Toast.makeText(mContext, "Download Started!", Toast.LENGTH_SHORT).show();

        file = new File(Environment.getExternalStorageDirectory().getPath() + "/YouP3/" + title + fileQuality + "." + fileExtension);
        if (file.exists()) file.delete();

        afterDownload = new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                System.out.println("Download Finished");
                String action = intent.getAction();
                if (DownloadManager.ACTION_DOWNLOAD_COMPLETE.equals(action)) {
                    long enqueue = intent.getLongExtra(
                            DownloadManager.EXTRA_DOWNLOAD_ID, 0);
                    DownloadManager.Query query = new DownloadManager.Query();
                    query.setFilterById(enqueue);
                    cursor = manager.query(query);
                    if (cursor.moveToFirst()) {
                        int columnIndex = cursor
                                .getColumnIndex(DownloadManager.COLUMN_STATUS);
                        if (DownloadManager.STATUS_SUCCESSFUL == cursor.getInt(columnIndex)) {
                            System.out.println(fileSize = file.length());
                            if (!(fileSize <= 545856)) {
                                Snackbar.make(mView, "Download Completed : " + title + "." + fileExtension, Snackbar.LENGTH_LONG).setAction("Play Now", new View.OnClickListener() {
                                    @Override
                                    public void onClick(View v) {
                                        Uri path = Uri.fromFile(file);
                                        Intent intent = new Intent(Intent.ACTION_VIEW);
                                        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                                        intent.setDataAndType(path, getMimeType(path.toString()));
                                        mContext.startActivity(intent);
                                    }
                                }).show();
                            }else{
                                manager.remove(downloadID);
                                startDownload(link);
                            }
                        }
                    }
                }
            }
        };

        startDownload(link);

    }

    private void startDownload(String newLink) {
        mContext.registerReceiver(afterDownload, new IntentFilter(
                DownloadManager.ACTION_DOWNLOAD_COMPLETE));

        manager = (DownloadManager) mContext.getSystemService(Context.DOWNLOAD_SERVICE);
        DownloadManager.Request request = new DownloadManager.Request(Uri.parse(newLink))
                .setAllowedOverMetered(true)
                .setAllowedOverRoaming(true)
                .setDestinationUri(Uri.fromFile(file))
                .setTitle(title.replace(fileExtension, ""));
        request.allowScanningByMediaScanner();
        downloadID = manager.enqueue(request);
    }


}
